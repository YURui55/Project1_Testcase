{"uid":"5292412bbb95f4b4","name":"test_case_excelbubei[test0]","fullName":"test_case.test_bubei#test_case_excelbubei","historyId":"e55e4597252e9af3ad6c528ba70619cc","time":{"start":1752155314676,"stop":1752155314761,"duration":85},"status":"failed","statusMessage":"AssertionError: 断言失败，实际结果与预期结果不一致\nassert {'data_kind':..._code': 20000} == {'data_kind':..._code': 20000}\n  \n  Omitting 3 identical items, use -vv to show\n  Differing items:\n  {'error_body': {'info': '图片验证码不正确或已过期', 'user_message': '图片验证码不正确或已过期'}} != {'error_body': {'info': '用户名或密码不正确', 'user_message': '用户名或密码不正确'}}\n  Use -v to get more diff","statusTrace":"test = {'data': '{\"captchaToken\":\"t296787.26843810466\",\"userName\":\"15979197624\",\"passwd\":\"123456\",\"verifyCode\":\"23\"}', 'expec...essage\": \"图片验证码不正确或已过期\",\\n        \"info\": \"图片验证码不正确或已过期\"\\n    }\\n}', 'header': 'connection:keep-alive', 'id': 1.0, ...}\n\n    @pytest.mark.parametrize('test',testbubei())\n    def test_case_excelbubei(test):\n        #print(\"当前用例\",test)\n        response = requests.request(\n            url=test['url'],\n            method=test['method'],\n            params=eval(test['data']),\n        )\n    \n        print('接口响应',response.text)\n        # 断言\n>       assert eval(test['expect']) == eval(response.content.decode('utf-8')), \"断言失败，实际结果与预期结果不一致\"\nE       AssertionError: 断言失败，实际结果与预期结果不一致\nE       assert {'data_kind':..._code': 20000} == {'data_kind':..._code': 20000}\nE         \nE         Omitting 3 identical items, use -vv to show\nE         Differing items:\nE         {'error_body': {'info': '图片验证码不正确或已过期', 'user_message': '图片验证码不正确或已过期'}} != {'error_body': {'info': '用户名或密码不正确', 'user_message': '用户名或密码不正确'}}\nE         Use -v to get more diff\n\n..\\test_case\\test_bubei.py:49: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: 断言失败，实际结果与预期结果不一致\nassert {'data_kind':..._code': 20000} == {'data_kind':..._code': 20000}\n  \n  Omitting 3 identical items, use -vv to show\n  Differing items:\n  {'error_body': {'info': '图片验证码不正确或已过期', 'user_message': '图片验证码不正确或已过期'}} != {'error_body': {'info': '用户名或密码不正确', 'user_message': '用户名或密码不正确'}}\n  Use -v to get more diff","statusTrace":"test = {'data': '{\"captchaToken\":\"t296787.26843810466\",\"userName\":\"15979197624\",\"passwd\":\"123456\",\"verifyCode\":\"23\"}', 'expec...essage\": \"图片验证码不正确或已过期\",\\n        \"info\": \"图片验证码不正确或已过期\"\\n    }\\n}', 'header': 'connection:keep-alive', 'id': 1.0, ...}\n\n    @pytest.mark.parametrize('test',testbubei())\n    def test_case_excelbubei(test):\n        #print(\"当前用例\",test)\n        response = requests.request(\n            url=test['url'],\n            method=test['method'],\n            params=eval(test['data']),\n        )\n    \n        print('接口响应',response.text)\n        # 断言\n>       assert eval(test['expect']) == eval(response.content.decode('utf-8')), \"断言失败，实际结果与预期结果不一致\"\nE       AssertionError: 断言失败，实际结果与预期结果不一致\nE       assert {'data_kind':..._code': 20000} == {'data_kind':..._code': 20000}\nE         \nE         Omitting 3 identical items, use -vv to show\nE         Differing items:\nE         {'error_body': {'info': '图片验证码不正确或已过期', 'user_message': '图片验证码不正确或已过期'}} != {'error_body': {'info': '用户名或密码不正确', 'user_message': '用户名或密码不正确'}}\nE         Use -v to get more diff\n\n..\\test_case\\test_bubei.py:49: AssertionError","steps":[],"attachments":[{"uid":"f12b4e327d1c24e5","name":"stdout","source":"f12b4e327d1c24e5.txt","type":"text/plain","size":168}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"parentSuite","value":"test_case"},{"name":"suite","value":"test_bubei"},{"name":"host","value":"BF-202302122330"},{"name":"thread","value":"19440-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.test_bubei"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"test","value":"{'id': 1.0, 'title': '手机号，密码正确，验证码不正确', 'mokuai': '登录', 'youxianji': 'p1', 'qianzhitiaojian': '打开不背单词网址，\\n且已注册账号', 'method': 'get', 'url': 'https://www.bbdc.cn/login?\\n', 'header': 'connection:keep-alive', 'data': '{\"captchaToken\":\"t296787.26843810466\",\"userName\":\"15979197624\",\"passwd\":\"123456\",\"verifyCode\":\"23\"}', 'expect': '{\\n    \"result_code\": 20000,\\n    \"data_kind\": \"\",\\n    \"data_version\": \"1.0\",\\n    \"error_body\": {\\n        \"user_message\": \"图片验证码不正确或已过期\",\\n        \"info\": \"图片验证码不正确或已过期\"\\n    }\\n}'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"5292412bbb95f4b4.json","parameterValues":["{'id': 1.0, 'title': '手机号，密码正确，验证码不正确', 'mokuai': '登录', 'youxianji': 'p1', 'qianzhitiaojian': '打开不背单词网址，\\n且已注册账号', 'method': 'get', 'url': 'https://www.bbdc.cn/login?\\n', 'header': 'connection:keep-alive', 'data': '{\"captchaToken\":\"t296787.26843810466\",\"userName\":\"15979197624\",\"passwd\":\"123456\",\"verifyCode\":\"23\"}', 'expect': '{\\n    \"result_code\": 20000,\\n    \"data_kind\": \"\",\\n    \"data_version\": \"1.0\",\\n    \"error_body\": {\\n        \"user_message\": \"图片验证码不正确或已过期\",\\n        \"info\": \"图片验证码不正确或已过期\"\\n    }\\n}'}"]}